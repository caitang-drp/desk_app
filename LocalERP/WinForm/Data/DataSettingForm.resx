<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABG
        CgAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAwMBAgMHAQgDDQEPAxEBFQMRARUDDQEPAwcBCAMDAQIgAAMDAQIDBwEI
        Aw0BDwMRARUDEQEVAw0BDwMHAQgDAwECmAADAgEBBAcDGAEfAzMBUAFHAUgBSQGBAU0BUgFWAZoBTQFS
        AVYBmgFHAUgBSQGBAzMBUAMYAR8EBwMCAQEQAAMCAQEEBwMYAR8DMwFQA0kBgQNVAZoDVQGaA0kBgQMz
        AVADGAEfBAcDAgEBjAADAgEBAwkBCgMuAUUBUQFYAWIBrQE+AXEBtgHsATABgAHuAf4BLwGFAfgB/wEv
        AYUB+AH/ATABgAHuAf4BPgFxAbYB7AFRAVgBYgGtAy4BRQMJAQoDAgEBCAADAgEBAwkBCgMuAUUDYAGt
        A7EB7APfAf4D5gH/A+YB/wPfAf4DsQHsA2ABrQMuAUUDCQEKAwIBAYgABAcDNAFRAUsBaQGNAdYBMwGJ
        AfgB/wE2AY0B/AH/ATcBjgH9Af8BNgGNAfwB/wE2AYwB/AH/ATYBjQH8Af8BNgGNAfwB/wEzAYkB+AH/
        AUsBaQGNAdYDNAFRBAcIAAQHAzQBUQOIAdYD6QH/A+cB/wPkAf8D4wH/A+IB/wPjAf8D5wH/A+kB/wOI
        AdYDNAFRBAeEAAMCAQEDJAEzAVABaAGEAc8BOgGRAfsB/wE7AZIB/AH/ATwBkwH8Af8BWQGVAe4B/wFh
        AZcB8AH/AUEBlgH8Af8BOgGSAfwB/wE7AZIB/AH/ATsBkgH8Af8BOgGRAfsB/wFQAWgBhAHPAyQBMwMC
        AQEDAgEBAyQBMwOCAc8D7AH/A+YB/wPiAf8D1QH/A9UB/wPhAf8D4AH/A+IB/wPmAf8D7AH/A4IBzwMk
        ATMDAgEBgAADCgELAUsBTgFRAY8BOwGSAfYB/wFBAZkB/AH/AUEBmQH8Af8BQgGXAfcB/wExAUkBnAH/
        ASkBKwGnAf8BXAGIAekB/wFIAZ0B/QH/AUABmAH8Af8BQQGZAfwB/wFBAZkB/AH/ATsBkgH2Af8BSwFO
        AVEBjwMKAQsDCgELA1ABjwPqAf8D6QH/A+UB/wPeAf8DgAH/A3cB/wPJAf8D5AH/A+MB/wPkAf8D6QH/
        A+oB/wNQAY8DCgELgAADHwEqAVIBbQGLAdQBRwGgAfwB/wFHAaAB/AH/AUcBoAH8Af8BRwGfAfsB/wEp
        AVwBqgH/AQUBCAFwAf8BIgEkAakB/wFgAYwB6QH/AU8BpQH9Af8BRwGgAfwB/wFHAaAB/AH/AUcBoAH8
        Af8BUgFtAYsB1AMfASoDHwEqA4oB1APvAf8D6QH/A+cB/wPlAf8DkgH/A0YB/wN1Af8DywH/A+gB/wPn
        Af8D6QH/A+8B/wOKAdQDHwEqgAADMQFMAUsBhgG/Ae8BTgGoAf0B/wFOAacB/QH/AU4BpwH9Af8BTgGn
        Af0B/wFMAaMB+AH/ASsBXQGmAf8BBgEKAX8B/wEiASQBtQH/AWABiQHmAf8BUAGoAfwB/wFNAacB/QH/
        AU4BqAH9Af8BSwGGAb8B7wMxAUwDMQFMA70B7wPxAf8D7AH/A+oB/wPrAf8D5QH/A5AB/wNRAf8DfQH/
        A8kB/wPqAf8D7AH/A/EB/wO9Ae8DMQFMgAADOQFcAUkBmAHfAfkBVQGvAf4B/wFUAa4B/QH/AVQBrgH9
        Af8BVAGuAf0B/wFUAa8B/gH/AV8BrgH1Af8BMwFEAbIB/wIDAaMB/wEjATYBrQH/AVQBqAH3Af8BVQGv
        Af0B/wFVAa8B/gH/AUkBmAHfAfkDOQFcAzkBXAPdAfkD8wH/A/AB/wPvAf8D7wH/A/AB/wPoAf8DiAH/
        A2IB/wOBAf8D5wH/A/AB/wPzAf8D3QH5AzkBXIAAAzUBUwFSAZkB0wH1AVwBtwH+Af8BWwG2Af0B/wFb
        AbYB/QH/AVsBtgH9Af8BZwG5AfwB/wFeAYAB2AH/AhMBqwH/AQwBFgGYAf8BPgF7AcoB/wFbAbUB/AH/
        AVsBtgH9Af8BXAG3Af4B/wFSAZkB0wH1AzUBUwM1AVMD0AH1A/YB/wPzAf8D8gH/A/MB/wPyAf8DugH/
        A28B/wNnAf8DtQH/A/IB/wP0Af8D9gH/A9AB9QM1AVOAAAMkATMBWAGDAaUB4gFjAb4B/gH/AWIBvQH+
        Af8BYQG9Af4B/wFkAb4B/QH/AVsBgQHIAf8BEwESAaAB/wENARgBmAH/AUUBgwHQAf8BYgG+Af4B/wFi
        Ab4B/gH/AWIBvQH+Af8BYwG+Af4B/wFYAYMBpQHiAyQBMwMkATMDpAHiA/kB/wP3Af8D9gH/A/YB/wOy
        Af8DZwH/A2cB/wO+Af8D9wH/A/YB/wP3Af8D+QH/A6QB4gMkATOAAAMKAQwBVAFcAWMBqwFoAcMB/AH/
        AWgBxAH+Af8BaAHFAf4B/wFnAcAB+QH/ASwBSgGNAf8BDwEaAXsB/wFJAYgBzwH/AWkBxQH+Af8BaAHF
        Af4B/wFoAcQB/gH/AWgBxAH+Af8BaAHDAfwB/wFUAVwBYwGrAwoBDAMKAQwDYwGrA/oB/wP7Af8D+gH/
        A/UB/wN5Af8DVwH/A8AB/wP7Af8D+gH/A/oB/wP7Af8D+gH/A2MBqwMKAQyEAAIwATEBSgFlAZoBvgHs
        AXEBzQH+Af8BbgHLAf4B/wFuAcsB/gH/AV8BrQHgAf8BWwGmAdkB/wFuAcoB/QH/AW4BywH+Af8BbgHL
        Af4B/wFuAcsB/gH/AXEBzQH+Af8BZQGaAb4B7AIwATEBSggAAzEBSgO9AewD/gH/A/0B/wP9Af8D3AH/
        A9UB/wP8Af8D/QH/A/0B/wP9Af8D/gH/A70B7AMxAUqIAAQFAUUCRwF7AW8BswHVAfUBeAHTAv8BcwHR
        Av8BcwHRAv8BdAHSAv8BcwHQAv8BcwHQAv8BcwHRAv8BeAHTAv8BbwGzAdUB9QFFAkcBewQFCAAEBQNH
        AXsD1QH1IP8D1QH1A0cBewQFjAADCgELAUECQgFxAWcBjwGlAeEBfAHOAfUB/gF+AdkC/wF9AdkC/wF9
        AdkC/wF+AdkC/wF8Ac4B9QH+AWcBjwGlAeEBQQJCAXEDCgELEAADCgELA0IBcQOkAeED9QH+EP8D9QH+
        A6QB4QNCAXEDCgELlAAEBAMpATwBUQFVAVgBmwFiAYQBmQHcAWgBrgHaAfgBaAGuAdoB+AFiAYQBmQHc
        AVEBVQFYAZsDKQE8BAQYAAQEAykBPANYAZsDmAHcA9kB+APZAfgDmAHcA1gBmwMpATwEBIwAAUIBTQE+
        BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHwAQ8B8AEPBAABwAEDAcABAwQAAYABAQGA
        AQEEAAGAAQEBgAEBRAABgAEBAYABAQQAAYABAQGAAQEEAAHAAQMBwAEDBAAB4AEHAeABBwQACw==
</value>
  </data>
</root>