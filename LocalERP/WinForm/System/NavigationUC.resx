<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAG
        CgAAAk1TRnQBSQFMAgEBAgEAAVABAAFQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAwEBAgMGAQgDCwEPAxABFQMQARUDCwEPAwYBCAMBAQIgAAMBAQIDBgEI
        AwsBDwMQARUDEAEVAwsBDwMGAQgDAQECmwABAQMFAQcDFgEfAzIBUANHAYEDUAGaA1ABmgNHAYEDMgFQ
        AxYBHwMFAQcDAAEBEwABAQMFAQcDFgEfAzIBUANHAYEDUAGaA1ABmgNHAYEDMgFQAxYBHwMFAQcDAAEB
        jwABAQMHAQoDLQFFA1UBrQN0AewDywH+A+YB/wPmAf8DywH+A3QB7ANVAa0DLQFFAwcBCgMAAQELAAEB
        AwcBCgMtAUUDVQGtAVkBZAF2AewBMAF/AdoB/gElAYUB+AH/ASUBhQH4Af8BMAF/AdoB/gFZAWQBdgHs
        A1UBrQMtAUUDBwEKAwABAYgAAwUBBwMyAVEDYAHWA+kB/wPnAf8D5AH/A+MB/wPiAf8D4wH/A+cB/wPp
        Af8DYAHWAzIBUQMFAQcIAAMFAQcDMgFRAVsCYAHWASkBiQH4Af8BLAGNAfwB/wEtAY4B/QH/ASwBjQH8
        Af8BLAGMAfwB/wEsAY0B/AH/ASwBjQH8Af8BKQGJAfgB/wFbAmAB1gMyAVEDBQEHhwABAQMjATMDXAHP
        A+wB/wPmAf8D4gH/A9UB/wPVAf8D4QH/A+AB/wPiAf8D5gH/A+wB/wNcAc8DIwEzAwABAQMAAQEDIwEz
        A1wBzwEwAZEB+wH/ATEBkgH8Af8BMgGTAfwB/wFPAZUB7gH/AVcBlwHwAf8BNwGWAfwB/wEwAZIB/AH/
        ATEBkgH8Af8BMQGSAfwB/wEwAZEB+wH/A1wBzwMjATMDAAEBgAADCAELA0wBjwPqAf8D6QH/A+UB/wPe
        Af8DdgH/A20B/wPJAf8D5AH/A+MB/wPkAf8D6QH/A+oB/wNMAY8DCAELAwgBCwNMAY8BMQGSAfYB/wE3
        AZkB/AH/ATcBmQH8Af8BOAGXAfcB/wEnAT8BnAH/AR8BIQGnAf8BUgGIAekB/wE+AZ0B/QH/ATYBmAH8
        Af8BNwGZAfwB/wE3AZkB/AH/ATEBkgH2Af8DTAGPAwgBC4AAAx0BKgNgAdQD7wH/A+kB/wPnAf8D5QH/
        A5IB/wM8Af8DawH/A8sB/wPoAf8D5wH/A+kB/wPvAf8DYAHUAx0BKgMdASoBXAJgAdQBPQGgAfwB/wE9
        AaAB/AH/AT0BoAH8Af8BPQGfAfsB/wEfAVIBqgH/AgABZgH/ARgBGgGpAf8BVgGMAekB/wFFAaUB/QH/
        AT0BoAH8Af8BPQGgAfwB/wE9AaAB/AH/AVwCYAHUAx0BKoAAAzABTAN6Ae8D8QH/A+wB/wPqAf8D6wH/
        A+UB/wOQAf8DRwH/A3MB/wPJAf8D6gH/A+wB/wPxAf8DegHvAzABTAMwAUwBWAFmAXoB7wFEAagB/QH/
        AUQBpwH9Af8BRAGnAf0B/wFEAacB/QH/AUIBowH4Af8BIQFTAaYB/wIAAXUB/wEYARoBtQH/AVYBiQHm
        Af8BRgGoAfwB/wFDAacB/QH/AUQBqAH9Af8BWAFmAXoB7wMwAUyAAAM4AVwDrQH5A/MB/wPwAf8D7wH/
        A+8B/wPwAf8D6AH/A4gB/wNYAf8DeAH/A+cB/wPwAf8D8wH/A60B+QM4AVwDOAFcAUcBiQGtAfkBSwGv
        Af4B/wFKAa4B/QH/AUoBrgH9Af8BSgGuAf0B/wFKAa8B/gH/AVUBrgH1Af8BKQE6AbIB/wIAAaMB/wEZ
        ASwBrQH/AUoBqAH3Af8BSwGvAf0B/wFLAa8B/gH/AUcBiQGtAfkDOAFcgAADMwFTA5EB9QP2Af8D8wH/
        A/IB/wPzAf8D8gH/A7oB/wNlAf8DXQH/A7UB/wPyAf8D9AH/A/YB/wORAfUDMwFTAzMBUwFZAXgBkgH1
        AVIBtwH+Af8BUQG2Af0B/wFRAbYB/QH/AVEBtgH9Af8BXQG5AfwB/wFUAXYB2AH/AgkBqwH/AQIBDAGY
        Af8BNAFxAcoB/wFRAbUB/AH/AVEBtgH9Af8BUgG3Af4B/wFZAXgBkgH1AzMBU4AAAyMBMwNkAeID+QH/
        A/cB/wP2Af8D9gH/A7IB/wNdAf8DXQH/A74B/wP3Af8D9gH/A/cB/wP5Af8DZAHiAyMBMwMjATMBXQFi
        AWQB4gFZAb4B/gH/AVgBvQH+Af8BVwG9Af4B/wFaAb4B/QH/AVEBeAHIAf8BCQEIAaAB/wEDAQ4BmAH/
        ATsBgwHQAf8BWAG+Af4B/wFYAb4B/gH/AVgBvQH+Af8BWQG+Af4B/wFdAWIBZAHiAyMBM4AAAwkBDANW
        AasD+gH/A/sB/wP6Af8D9QH/A28B/wNNAf8DwAH/A/sB/wP6Af8D+gH/A/sB/wP6Af8DVgGrAwkBDAMJ
        AQwBVAJWAasBXgHDAfwB/wFeAcQB/gH/AV4BxQH+Af8BXQHAAfkB/wEiAUABjQH/AQUBEAFxAf8BPwGI
        Ac8B/wFfAcUB/gH/AV4BxQH+Af8BXgHEAf4B/wFeAcQB/gH/AV4BwwH8Af8BVAJWAasDCQEMhAADLwFK
        A3cB7AP+Af8D/QH/A/0B/wPcAf8D1QH/A/wB/wP9Af8D/QH/A/0B/wP+Af8DdwHsAy8BSggAAy8BSgFk
        AXABdwHsAWcBzQH+Af8BZAHLAf4B/wFkAcsB/gH/AVUBrQHgAf8BUQGmAdkB/wFkAcoB/QH/AWQBywH+
        Af8BZAHLAf4B/wFkAcsB/gH/AWcBzQH+Af8BZAFwAXcB7AMvAUqIAAMEAQUDRAF7A5IB9SD/A5IB9QNE
        AXsDBAEFCAADBAEFA0QBewFkAYQBkgH1AW4B0wL/AWkB0QL/AWkB0QL/AWoB0gL/AWkB0AL/AWkB0AL/
        AWkB0QL/AW4B0wL/AWQBhAGSAfUDRAF7AwQBBYwAAwgBCwNAAXEDZQThAf4Q/wPhAf4DZQHhA0ABcQMI
        AQsQAAMIAQsDQAFxAWEBYgFlAeEBfAG6AeEB/gF0AdkC/wFzAdkC/wFzAdkC/wF0AdkC/wF8AboB4QH+
        AWEBYgFlAeEDQAFxAwgBC5QAAwMBBAMoATwDUAGbA2EB3AOkAfgDpAH4A2EB3ANQAZsDKAE8AwMBBBgA
        AwMBBAMoATwDUAGbA2EB3AFcAZIBpAH4AVwBkgGkAfgDYQHcA1ABmwMoATwDAwEEjAABQgFNAT4HAAE+
        AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAfABDwHwAQ8EAAHAAQMBwAEDBAABgAEBAYABAQQA
        AYABAQGAAQFEAAGAAQEBgAEBBAABgAEBAYABAQQAAcABAwHAAQMEAAHgAQcB4AEHBAAL
</value>
  </data>
</root>