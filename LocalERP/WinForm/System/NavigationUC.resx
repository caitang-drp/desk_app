<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD8
        CQAAAk1TRnQBSQFMAgEBAgEAAWgBAAFoAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAwEBAgMGAQgDCwEPAxABFQMQARUDCwEPAwYBCAMBAQIgAAMBAQIDBgEI
        AwsBDwMQARUDEAEVAwsBDwMGAQgDAQECmwABAQMFAQcDFgEfAzIBUANHAYEDUAGaA1ABmgNHAYEDMgFQ
        AxYBHwMFAQcDAAEBEwABAQMFAQcDFgEfAzIBUANHAYEDUAGaA1ABmgNHAYEDMgFQAxYBHwMFAQcDAAEB
        jwABAQMHAQoDLQFFA1UBrQNsAewDxQH+A+YB/wPmAf8DxQH+A2wB7ANVAa0DLQFFAwcBCgMAAQELAAEB
        AwcBCgMtAUUDVQGtAVkBZAFuAewBMAF/AdQB/gEiAYUB+AH/ASIBhQH4Af8BMAF/AdQB/gFZAWQBbgHs
        A1UBrQMtAUUDBwEKAwABAYgAAwUBBwMyAVEDYAHWA+kB/wPnAf8D5AH/A+MB/wPiAf8D4wH/A+cB/wPp
        Af8DYAHWAzIBUQMFAQcIAAMFAQcDMgFRAVsCYAHWASYBiQH4Af8BKQGNAfwB/wEqAY4B/QH/ASkBjQH8
        Af8BKQGMAfwB/wEpAY0B/AH/ASkBjQH8Af8BJgGJAfgB/wFbAmAB1gMyAVEDBQEHhwABAQMjATMDXAHP
        A+wB/wPmAf8D4gH/A9UB/wPVAf8D4QH/A+AB/wPiAf8D5gH/A+wB/wNcAc8DIwEzAwABAQMAAQEDIwEz
        A1wBzwEtAZEB+wH/AS4BkgH8Af8BLwGTAfwB/wFMAZUB7gH/AVQBlwHwAf8BNAGWAfwB/wEtAZIB/AH/
        AS4BkgH8Af8BLgGSAfwB/wEtAZEB+wH/A1wBzwMjATMDAAEBgAADCAELA0wBjwPqAf8D6QH/A+UB/wPe
        Af8DcwH/A2oB/wPJAf8D5AH/A+MB/wPkAf8D6QH/A+oB/wNMAY8DCAELAwgBCwNMAY8BLgGSAfYB/wE0
        AZkB/AH/ATQBmQH8Af8BNQGXAfcB/wEkATwBnAH/ARwBHgGnAf8BTwGIAekB/wE7AZ0B/QH/ATMBmAH8
        Af8BNAGZAfwB/wE0AZkB/AH/AS4BkgH2Af8DTAGPAwgBC4AAAx0BKgNgAdQD7wH/A+kB/wPnAf8D5QH/
        A5IB/wM5Af8DaAH/A8sB/wPoAf8D5wH/A+kB/wPvAf8DYAHUAx0BKgMdASoBXAJgAdQBOgGgAfwB/wE6
        AaAB/AH/AToBoAH8Af8BOgGfAfsB/wEcAU8BqgH/AgABYwH/ARUBFwGpAf8BUwGMAekB/wFCAaUB/QH/
        AToBoAH8Af8BOgGgAfwB/wE6AaAB/AH/AVwCYAHUAx0BKoAAAzABTANwAe8D8QH/A+wB/wPqAf8D6wH/
        A+UB/wOQAf8DRAH/A3AB/wPJAf8D6gH/A+wB/wPxAf8DcAHvAzABTAMwAUwBWAFjAXAB7wFBAagB/QH/
        AUEBpwH9Af8BQQGnAf0B/wFBAacB/QH/AT8BowH4Af8BHgFQAaYB/wIAAXIB/wEVARcBtQH/AVMBiQHm
        Af8BQwGoAfwB/wFAAacB/QH/AUEBqAH9Af8BWAFjAXAB7wMwAUyAAAM4AVwDogH5A/MB/wPwAf8D7wH/
        A+8B/wPwAf8D6AH/A4gB/wNVAf8DdQH/A+cB/wPwAf8D8wH/A6IB+QM4AVwDOAFcAUcBhgGiAfkBSAGv
        Af4B/wFHAa4B/QH/AUcBrgH9Af8BRwGuAf0B/wFHAa8B/gH/AVIBrgH1Af8BJgE3AbIB/wIAAaMB/wEW
        ASkBrQH/AUcBqAH3Af8BSAGvAf0B/wFIAa8B/gH/AUcBhgGiAfkDOAFcgAADMwFTA4YB9QP2Af8D8wH/
        A/IB/wPzAf8D8gH/A7oB/wNiAf8DWgH/A7UB/wPyAf8D9AH/A/YB/wOGAfUDMwFTAzMBUwFZAW8BhgH1
        AU8BtwH+Af8BTgG2Af0B/wFOAbYB/QH/AU4BtgH9Af8BWgG5AfwB/wFRAXMB2AH/AgYBqwH/AQABCQGY
        Af8BMQFuAcoB/wFOAbUB/AH/AU4BtgH9Af8BTwG3Af4B/wFZAW8BhgH1AzMBU4AAAyMBMwNhAeID+QH/
        A/cB/wP2Af8D9gH/A7IB/wNaAf8DWgH/A74B/wP3Af8D9gH/A/cB/wP5Af8DYQHiAyMBMwMjATMBXQJh
        AeIBVgG+Af4B/wFVAb0B/gH/AVQBvQH+Af8BVwG+Af0B/wFOAXUByAH/AQYBBQGgAf8BAAELAZgB/wE4
        AYMB0AH/AVUBvgH+Af8BVQG+Af4B/wFVAb0B/gH/AVYBvgH+Af8BXQJhAeIDIwEzgAADCQEMA1YBqwP6
        Af8D+wH/A/oB/wP1Af8DbAH/A0oB/wPAAf8D+wH/A/oB/wP6Af8D+wH/A/oB/wNWAasDCQEMAwkBDAFU
        AlYBqwFbAcMB/AH/AVsBxAH+Af8BWwHFAf4B/wFaAcAB+QH/AR8BPQGNAf8BAgENAW4B/wE8AYgBzwH/
        AVwBxQH+Af8BWwHFAf4B/wFbAcQB/gH/AVsBxAH+Af8BWwHDAfwB/wFUAlYBqwMJAQyEAAMvAUoDbgHs
        A/4B/wP9Af8D/QH/A9wB/wPVAf8D/AH/A/0B/wP9Af8D/QH/A/4B/wNuAewDLwFKCAADLwFKAWQBagFu
        AewBZAHNAf4B/wFhAcsB/gH/AWEBywH+Af8BUgGtAeAB/wFOAaYB2QH/AWEBygH9Af8BYQHLAf4B/wFh
        AcsB/gH/AWEBywH+Af8BZAHNAf4B/wFkAWoBbgHsAy8BSogAAwQBBQNEAXsDhgH1IP8DhgH1A0QBewME
        AQUIAAMEAQUDRAF7AV4BfgGGAfUBawHTAv8BZgHRAv8BZgHRAv8BZwHSAv8BZgHQAv8BZgHQAv8BZgHR
        Av8BawHTAv8BXgF+AYYB9QNEAXsDBAEFjAADCAELA0ABcQNhAeED2wH+EP8D2wH+A2EB4QNAAXEDCAEL
        EAADCAELA0ABcQNhAeEBfAG0AdsB/gFxAdkC/wFwAdkC/wFwAdkC/wFxAdkC/wF8AbQB2wH+A2EB4QNA
        AXEDCAELlAADAwEEAygBPANQAZsDYQHcA5sB+AObAfgDYQHcA1ABmwMoATwDAwEEGAADAwEEAygBPANQ
        AZsDYQHcAVwBigGbAfgBXAGKAZsB+ANhAdwDUAGbAygBPAMDAQSMAAFCAU0BPgcAAT4DAAEoAwABQAMA
        ARADAAEBAQABAQUAAYAXAAP/AQAB8AEPAfABDwQAAcABAwHAAQMEAAGAAQEBgAEBBAABgAEBAYABAUQA
        AYABAQGAAQEEAAGAAQEBgAEBBAABwAEDAcABAwQAAeABBwHgAQcEAAs=
</value>
  </data>
</root>