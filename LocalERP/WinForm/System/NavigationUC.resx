<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAA
        CgAAAk1TRnQBSQFMAgEBAgEAAWABAAFgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAwEBAgMGAQgDCwEPAxABFQMQARUDCwEPAwYBCAMBAQIgAAMBAQIDBgEI
        AwsBDwMQARUDEAEVAwsBDwMGAQgDAQECmwABAQMFAQcDFgEfAzIBUANHAYEDUAGaA1ABmgNHAYEDMgFQ
        AxYBHwMFAQcDAAEBEwABAQMFAQcDFgEfAzIBUANHAYEDUAGaA1ABmgNHAYEDMgFQAxYBHwMFAQcDAAEB
        jwABAQMHAQoDLQFFA1UBrQNuAewDxwH+A+YB/wPmAf8DxwH+A24B7ANVAa0DLQFFAwcBCgMAAQELAAEB
        AwcBCgMtAUUDVQGtAVkBZAFwAewBMAF/AdYB/gEjAYUB+AH/ASMBhQH4Af8BMAF/AdYB/gFZAWQBcAHs
        A1UBrQMtAUUDBwEKAwABAYgAAwUBBwMyAVEDYAHWA+kB/wPnAf8D5AH/A+MB/wPiAf8D4wH/A+cB/wPp
        Af8DYAHWAzIBUQMFAQcIAAMFAQcDMgFRAVsCYAHWAScBiQH4Af8BKgGNAfwB/wErAY4B/QH/ASoBjQH8
        Af8BKgGMAfwB/wEqAY0B/AH/ASoBjQH8Af8BJwGJAfgB/wFbAmAB1gMyAVEDBQEHhwABAQMjATMDXAHP
        A+wB/wPmAf8D4gH/A9UB/wPVAf8D4QH/A+AB/wPiAf8D5gH/A+wB/wNcAc8DIwEzAwABAQMAAQEDIwEz
        A1wBzwEuAZEB+wH/AS8BkgH8Af8BMAGTAfwB/wFNAZUB7gH/AVUBlwHwAf8BNQGWAfwB/wEuAZIB/AH/
        AS8BkgH8Af8BLwGSAfwB/wEuAZEB+wH/A1wBzwMjATMDAAEBgAADCAELA0wBjwPqAf8D6QH/A+UB/wPe
        Af8DdAH/A2sB/wPJAf8D5AH/A+MB/wPkAf8D6QH/A+oB/wNMAY8DCAELAwgBCwNMAY8BLwGSAfYB/wE1
        AZkB/AH/ATUBmQH8Af8BNgGXAfcB/wElAT0BnAH/AR0BHwGnAf8BUAGIAekB/wE8AZ0B/QH/ATQBmAH8
        Af8BNQGZAfwB/wE1AZkB/AH/AS8BkgH2Af8DTAGPAwgBC4AAAx0BKgNgAdQD7wH/A+kB/wPnAf8D5QH/
        A5IB/wM6Af8DaQH/A8sB/wPoAf8D5wH/A+kB/wPvAf8DYAHUAx0BKgMdASoBXAJgAdQBOwGgAfwB/wE7
        AaAB/AH/ATsBoAH8Af8BOwGfAfsB/wEdAVABqgH/AgABZAH/ARYBGAGpAf8BVAGMAekB/wFDAaUB/QH/
        ATsBoAH8Af8BOwGgAfwB/wE7AaAB/AH/AVwCYAHUAx0BKoAAAzABTANyAe8D8QH/A+wB/wPqAf8D6wH/
        A+UB/wOQAf8DRQH/A3EB/wPJAf8D6gH/A+wB/wPxAf8DcgHvAzABTAMwAUwBWAFkAXIB7wFCAagB/QH/
        AUIBpwH9Af8BQgGnAf0B/wFCAacB/QH/AUABowH4Af8BHwFRAaYB/wIAAXMB/wEWARgBtQH/AVQBiQHm
        Af8BRAGoAfwB/wFBAacB/QH/AUIBqAH9Af8BWAFkAXIB7wMwAUyAAAM4AVwDpgH5A/MB/wPwAf8D7wH/
        A+8B/wPwAf8D6AH/A4gB/wNWAf8DdgH/A+cB/wPwAf8D8wH/A6YB+QM4AVwDOAFcAUcBhwGmAfkBSQGv
        Af4B/wFIAa4B/QH/AUgBrgH9Af8BSAGuAf0B/wFIAa8B/gH/AVMBrgH1Af8BJwE4AbIB/wIAAaMB/wEX
        ASoBrQH/AUgBqAH3Af8BSQGvAf0B/wFJAa8B/gH/AUcBhwGmAfkDOAFcgAADMwFTA4kB9QP2Af8D8wH/
        A/IB/wPzAf8D8gH/A7oB/wNjAf8DWwH/A7UB/wPyAf8D9AH/A/YB/wOJAfUDMwFTAzMBUwFZAXABiQH1
        AVABtwH+Af8BTwG2Af0B/wFPAbYB/QH/AU8BtgH9Af8BWwG5AfwB/wFSAXQB2AH/AgcBqwH/AQABCgGY
        Af8BMgFvAcoB/wFPAbUB/AH/AU8BtgH9Af8BUAG3Af4B/wFZAXABiQH1AzMBU4AAAyMBMwNiAeID+QH/
        A/cB/wP2Af8D9gH/A7IB/wNbAf8DWwH/A74B/wP3Af8D9gH/A/cB/wP5Af8DYgHiAyMBMwMjATMBXQFh
        AWIB4gFXAb4B/gH/AVYBvQH+Af8BVQG9Af4B/wFYAb4B/QH/AU8BdgHIAf8BBwEGAaAB/wEBAQwBmAH/
        ATkBgwHQAf8BVgG+Af4B/wFWAb4B/gH/AVYBvQH+Af8BVwG+Af4B/wFdAWEBYgHiAyMBM4AAAwkBDANW
        AasD+gH/A/sB/wP6Af8D9QH/A20B/wNLAf8DwAH/A/sB/wP6Af8D+gH/A/sB/wP6Af8DVgGrAwkBDAMJ
        AQwBVAJWAasBXAHDAfwB/wFcAcQB/gH/AVwBxQH+Af8BWwHAAfkB/wEgAT4BjQH/AQMBDgFvAf8BPQGI
        Ac8B/wFdAcUB/gH/AVwBxQH+Af8BXAHEAf4B/wFcAcQB/gH/AVwBwwH8Af8BVAJWAasDCQEMhAADLwFK
        A3AB7AP+Af8D/QH/A/0B/wPcAf8D1QH/A/wB/wP9Af8D/QH/A/0B/wP+Af8DcAHsAy8BSggAAy8BSgFk
        AWwBcAHsAWUBzQH+Af8BYgHLAf4B/wFiAcsB/gH/AVMBrQHgAf8BTwGmAdkB/wFiAcoB/QH/AWIBywH+
        Af8BYgHLAf4B/wFiAcsB/gH/AWUBzQH+Af8BZAFsAXAB7AMvAUqIAAMEAQUDRAF7A4kB9SD/A4kB9QNE
        AXsDBAEFCAADBAEFA0QBewFgAYABiQH1AWwB0wL/AWcB0QL/AWcB0QL/AWgB0gL/AWcB0AL/AWcB0AL/
        AWcB0QL/AWwB0wL/AWABgAGJAfUDRAF7AwQBBYwAAwgBCwNAAXEDYQHhA90B/hD/A90B/gNhAeEDQAFx
        AwgBCxAAAwgBCwNAAXEDYQHhAXwBtgHdAf4BcgHZAv8BcQHZAv8BcQHZAv8BcgHZAv8BfAG2Ad0B/gNh
        AeEDQAFxAwgBC5QAAwMBBAMoATwDUAGbA2EB3AOdAfgDnQH4A2EB3ANQAZsDKAE8AwMBBBgAAwMBBAMo
        ATwDUAGbA2EB3AFcAY0BnQH4AVwBjQGdAfgDYQHcA1ABmwMoATwDAwEEjAABQgFNAT4HAAE+AwABKAMA
        AUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAfABDwHwAQ8EAAHAAQMBwAEDBAABgAEBAYABAQQAAYABAQGA
        AQFEAAGAAQEBgAEBBAABgAEBAYABAQQAAcABAwHAAQMEAAHgAQcB4AEHBAAL
</value>
  </data>
</root>