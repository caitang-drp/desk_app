<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAg
        CgAAAk1TRnQBSQFMAgEBAgEAATgBAAE4AQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAwEBAgMGAQgDCwEPAxABFQMQARUDCwEPAwYBCAMBAQIgAAMBAQIDBgEI
        AwsBDwMQARUDEAEVAwsBDwMGAQgDAQECmwABAQMFAQcDFgEfAzIBUANHAYEDUAGaA1ABmgNHAYEDMgFQ
        AxYBHwMFAQcDAAEBEwABAQMFAQcDFgEfAzIBUANHAYEDUAGaA1ABmgNHAYEDMgFQAxYBHwMFAQcDAAEB
        jwABAQMHAQoDLQFFA1UBrQN+AewD0QH+A+YB/wPmAf8D0QH+A34B7ANVAa0DLQFFAwcBCgMAAQELAAEB
        AwcBCgMtAUUDVQGtAVUBaAGAAewBMAF/AeAB/gEoAYUB+AH/ASgBhQH4Af8BMAF/AeAB/gFVAWgBgAHs
        A1UBrQMtAUUDBwEKAwABAYgAAwUBBwMyAVEDYgHWA+kB/wPnAf8D5AH/A+MB/wPiAf8D4wH/A+cB/wPp
        Af8DYgHWAzIBUQMFAQcIAAMFAQcDMgFRAVsBYAFiAdYBLAGJAfgB/wEvAY0B/AH/ATABjgH9Af8BLwGN
        AfwB/wEvAYwB/AH/AS8BjQH8Af8BLwGNAfwB/wEsAYkB+AH/AVsBYAFiAdYDMgFRAwUBB4cAAQEDIwEz
        A2ABzwPsAf8D5gH/A+IB/wPVAf8D1QH/A+EB/wPgAf8D4gH/A+YB/wPsAf8DYAHPAyMBMwMAAQEDAAEB
        AyMBMwFcAV0BYAHPATMBkQH7Af8BNAGSAfwB/wE1AZMB/AH/AVIBlQHuAf8BWgGXAfAB/wE6AZYB/AH/
        ATMBkgH8Af8BNAGSAfwB/wE0AZIB/AH/ATMBkQH7Af8BXAFdAWABzwMjATMDAAEBgAADCAELA0wBjwPq
        Af8D6QH/A+UB/wPeAf8DeQH/A3AB/wPJAf8D5AH/A+MB/wPkAf8D6QH/A+oB/wNMAY8DCAELAwgBCwNM
        AY8BNAGSAfYB/wE6AZkB/AH/AToBmQH8Af8BOwGXAfcB/wEqAUIBnAH/ASIBJAGnAf8BVQGIAekB/wFB
        AZ0B/QH/ATkBmAH8Af8BOgGZAfwB/wE6AZkB/AH/ATQBkgH2Af8DTAGPAwgBC4AAAx0BKgNgAdQD7wH/
        A+kB/wPnAf8D5QH/A5IB/wM/Af8DbgH/A8sB/wPoAf8D5wH/A+kB/wPvAf8DYAHUAx0BKgMdASoBXAJg
        AdQBQAGgAfwB/wFAAaAB/AH/AUABoAH8Af8BQAGfAfsB/wEiAVUBqgH/AQABAQFpAf8BGwEdAakB/wFZ
        AYwB6QH/AUgBpQH9Af8BQAGgAfwB/wFAAaAB/AH/AUABoAH8Af8BXAJgAdQDHQEqgAADMAFMA4YB7wPx
        Af8D7AH/A+oB/wPrAf8D5QH/A5AB/wNKAf8DdgH/A8kB/wPqAf8D7AH/A/EB/wOGAe8DMAFMAzABTAFV
        AW4BhgHvAUcBqAH9Af8BRwGnAf0B/wFHAacB/QH/AUcBpwH9Af8BRQGjAfgB/wEkAVYBpgH/AQABAwF4
        Af8BGwEdAbUB/wFZAYkB5gH/AUkBqAH8Af8BRgGnAf0B/wFHAagB/QH/AVUBbgGGAe8DMAFMgAADOAFc
        A7cB+QPzAf8D8AH/A+8B/wPvAf8D8AH/A+gB/wOIAf8DWwH/A3sB/wPnAf8D8AH/A/MB/wO3AfkDOAFc
        AzgBXAFHAYwBtwH5AU4BrwH+Af8BTQGuAf0B/wFNAa4B/QH/AU0BrgH9Af8BTQGvAf4B/wFYAa4B9QH/
        ASwBPQGyAf8CAAGjAf8BHAEvAa0B/wFNAagB9wH/AU4BrwH9Af8BTgGvAf4B/wFHAYwBtwH5AzgBXIAA
        AzMBUwOeAfUD9gH/A/MB/wPyAf8D8wH/A/IB/wO6Af8DaAH/A2AB/wO1Af8D8gH/A/QB/wP2Af8DngH1
        AzMBUwMzAVMBVgGBAaAB9QFVAbcB/gH/AVQBtgH9Af8BVAG2Af0B/wFUAbYB/QH/AWABuQH8Af8BVwF5
        AdgB/wIMAasB/wEFAQ8BmAH/ATcBdAHKAf8BVAG1AfwB/wFUAbYB/QH/AVUBtwH+Af8BVgGBAaAB9QMz
        AVOAAAMjATMDawHiA/kB/wP3Af8D9gH/A/YB/wOyAf8DYAH/A2AB/wO+Af8D9wH/A/YB/wP3Af8D+QH/
        A2sB4gMjATMDIwEzAV0BZQFrAeIBXAG+Af4B/wFbAb0B/gH/AVoBvQH+Af8BXQG+Af0B/wFUAXsByAH/
        AQwBCwGgAf8BBgERAZgB/wE+AYMB0AH/AVsBvgH+Af8BWwG+Af4B/wFbAb0B/gH/AVwBvgH+Af8BXQFl
        AWsB4gMjATOAAAMJAQwDVgGrA/oB/wP7Af8D+gH/A/UB/wNyAf8DUAH/A8AB/wP7Af8D+gH/A/oB/wP7
        Af8D+gH/A1YBqwMJAQwDCQEMAVQCVgGrAWEBwwH8Af8BYQHEAf4B/wFhAcUB/gH/AWABwAH5Af8BJQFD
        AY0B/wEIARMBdAH/AUIBiAHPAf8BYgHFAf4B/wFhAcUB/gH/AWEBxAH+Af8BYQHEAf4B/wFhAcMB/AH/
        AVQCVgGrAwkBDIQAAy8BSgOCAewD/gH/A/0B/wP9Af8D3AH/A9UB/wP8Af8D/QH/A/0B/wP9Af8D/gH/
        A4IB7AMvAUoIAAMvAUoBZAF5AYIB7AFqAc0B/gH/AWcBywH+Af8BZwHLAf4B/wFYAa0B4AH/AVQBpgHZ
        Af8BZwHKAf0B/wFnAcsB/gH/AWcBywH+Af8BZwHLAf4B/wFqAc0B/gH/AWQBeQGCAewDLwFKiAADBAEF
        A0QBewOgAfUg/wOgAfUDRAF7AwQBBQgAAwQBBQNEAXsBaAGOAaAB9QFxAdMC/wFsAdEC/wFsAdEC/wFt
        AdIC/wFsAdAC/wFsAdAC/wFsAdEC/wFxAdMC/wFoAY4BoAH1A0QBewMEAQWMAAMIAQsDQAFxA20B4QPn
        Af4Q/wPnAf4DbQHhA0ABcQMIAQsQAAMIAQsDQAFxAWEBaAFtAeEBfAHAAecB/gF3AdkC/wF2AdkC/wF2
        AdkC/wF3AdkC/wF8AcAB5wH+AWEBaAFtAeEDQAFxAwgBC5QAAwMBBAMoATwDUAGbA2YB3AOzAfgDswH4
        A2YB3ANQAZsDKAE8AwMBBBgAAwMBBAMoATwDUAGbAWEBYgFmAdwBXAGYAbMB+AFcAZgBswH4AWEBYgFm
        AdwDUAGbAygBPAMDAQSMAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAB8AEP
        AfABDwQAAcABAwHAAQMEAAGAAQEBgAEBBAABgAEBAYABAUQAAYABAQGAAQEEAAGAAQEBgAEBBAABwAED
        AcABAwQAAeABBwHgAQcEAAs=
</value>
  </data>
</root>